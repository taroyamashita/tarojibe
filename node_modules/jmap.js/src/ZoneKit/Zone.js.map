{"version":3,"sources":["../src/Zone.js"],"names":["Zone","Array","isArray","_","locations","get","name","set","String","description","color","global","jmap","core","BaseModel","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAGMA,I;;;;;;;;;;;qCAWW;AACb,eAAOC,MAAMC,OAAN,CAAc,KAAKC,CAAL,CAAOC,SAArB,IAAkC,KAAKD,CAAL,CAAOC,SAAzC,GAAqD,EAA5D;AACD;;;0BAKU;AACT,eAAO,KAAKC,GAAL,CAAS,MAAT,EAAiB,IAAjB,CAAP;AACD,O;wBACQC,I,EAAM;AACb,aAAKC,GAAL,CAAS,MAAT,EAAiBD,IAAjB,EAAuBE,MAAvB;AACD;;;0BAKiB;AAChB,eAAO,KAAKH,GAAL,CAAS,aAAT,EAAwB,IAAxB,CAAP;AACD,O;wBACeI,W,EAAa;AAC3B,aAAKF,GAAL,CAAS,aAAT,EAAwBE,WAAxB,EAAqCD,MAArC;AACD;;;0BAKW;AACV,eAAO,KAAKH,GAAL,CAAS,OAAT,EAAkB,IAAlB,CAAP;AACD,O;wBACSK,K,EAAO;AACf,aAAKH,GAAL,CAAS,OAAT,EAAkBG,KAAlB,EAAyBF,MAAzB;AACD;;;;IA3CgBG,OAAOC,IAAP,CAAYC,IAAZ,CAAiBC,S;;AA+CpCC,SAAOC,OAAP,GAAiBhB,IAAjB","file":"Zone.js","sourcesContent":["/**\n* @desc Class representing a Zone\n*/\nclass Zone extends global.jmap.core.BaseModel {\n  /**\n   * Create a Zone\n   * @param {object} model - The model object passed back from the /full payload\n   */\n\n  /**\n   * @access private\n   * @desc - Get the locations for this specific Zone\n   * @return {object[]} - An array of locations for this Zone, or an empty array\n   */\n  getLocations() {\n    return Array.isArray(this._.locations) ? this._.locations : []\n  }\n\n  /**\n   * @member {String} Zone#name\n   */\n  get name() {\n    return this.get('name', null)\n  }\n  set name(name) {\n    this.set('name', name, String)\n  }\n\n  /**\n   * @member {String} Zone#description\n   */\n  get description() {\n    return this.get('description', null)\n  }\n  set description(description) {\n    this.set('description', description, String)\n  }\n\n  /**\n   * @member {String} Zone#color\n   */\n  get color() {\n    return this.get('color', null)\n  }\n  set color(color) {\n    this.set('color', color, String)\n  }\n\n}\n\nmodule.exports = Zone\n"]}